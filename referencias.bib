@InProceedings{reflection,
author="Boutin, Samuel",
editor="Abadi, Mart{\'i}n
and Ito, Takayasu",
title="Using reflection to build efficient and certified decision procedures",
booktitle="Theoretical Aspects of Computer Software",
year="1997",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="515--529",
abstract="In this paper we explain how computational reflection can help build efficient certified decision procedure in reduction systems. We have developed a decision procedure on abelian rings in the Coq system but the approach we describe applies to all reduction systems that allow the definition of concrete types (or datatypes). We show that computational reflection is more efficient than an LCF-like approach to implement decision procedures in a reduction system. We discuss the concept of total reflection, which we have investigated in Coq using two facts: the extraction process available in Coq and the fact that the implementation language of the Coq system can be considered as a sublanguage of Coq. Total reflection is not yet implemented in Coq but we can test its performance as the extraction process is effective. Both reflection and total reflection are conservative extensions of the reduction system in which they are used. We also discuss performance and related approaches. In the paper,we assume basic knowledges of ML and proof-checkers.",
isbn="978-3-540-69530-1"
}

@string{cade   = "Proc. Conference on Automated Deduction (CADE)"}
@string{cav    = "Computer Aided Verification (CAV)"}
@string{ijcar1  = "International Joint Conference on Automated Reasoning
                 (IJCAR), Part I"}
@string{ijcar2  = "International Joint Conference on Automated Reasoning
                 (IJCAR), Part II"}
@string{ijcar  = "International Joint Conference on Automated Reasoning
                 (IJCAR)"}

@string{lncs   = "Lecture Notes in Computer Science"}

@TECHREPORT{smtlib,
  author = {Clark Barrett and Pascal Fontaine and Cesare Tinelli},
  title = {{The SMT-LIB Standard: Version 2.6}},
  institution = {Department of Computer Science, The University of Iowa},
  year = 2017,
  note = {Available at {www.SMT-LIB.org}}
}

@InProceedings{cvc5,
  author    = "Barbosa, Haniel
  and others",
  editor    = "Fisman, Dana
  and Rosu, Grigore",
  title     = "cvc5: A Versatile and Industrial-Strength SMT Solver",
  booktitle = "Tools and Algorithms for the Construction and Analysis of Systems",
  year      = "2022",
  publisher = "Springer International Publishing",
  address   = "Cham",
  pages     = "415--442",
  isbn      = "978-3-030-99524-9"
}

@article{hammering,
title   = {Hammering towards QED},
year    = {2016},
month   = {Jan.},
volume  = {9},
url     = {https://jfr.unibo.it/article/view/4593},
DOI     = {10.6092/issn.1972-5787/4593},
number  = {1},
journal = {Journal of Formalized Reasoning},
author  = {Blanchette, Jasmin C. and Kaliszyk, Cezary and Paulson, Lawrence C. and Urban, Josef},
pages   = {101-148}
}

@InProceedings{smtcoq,
author    = "Ekici, Burak
and Mebsout, Alain
and Tinelli, Cesare
and Keller, Chantal
and Katz, Guy
and Reynolds, Andrew
and Barrett, Clark",
editor    = "Majumdar, Rupak
and Kun{\v{c}}ak, Viktor",
title     = "SMTCoq: A Plug-In for Integrating SMT Solvers into Coq",
booktitle = "Computer Aided Verification",
year      = "2017",
publisher = "Springer International Publishing",
address   = "Cham",
pages     = "126--133",
isbn      = "978-3-319-63390-9"
}

@InProceedings{sledgehammer,
author    = "Blanchette, Jasmin Christian
and B{\"o}hme, Sascha
and Paulson, Lawrence C.",
editor    = "Bj{\o}rner, Nikolaj
and Sofronie-Stokkermans, Viorica",
title     = "Extending Sledgehammer with SMT Solvers",
booktitle = "Automated Deduction -- CADE-23",
year      = "2011",
publisher = "Springer Berlin Heidelberg",
address   = "Berlin, Heidelberg",
pages     = "116--130",
isbn      = "978-3-642-22438-6"
}

@article{scholze,
author  = {Castelvecchi, Davide},
year    = {2021},
month   = {06},
pages   = {},
title   = {Mathematicians welcome computer-assisted proof in ``grand unification'' theory},
volume  = {595},
journal = {Nature},
doi     = {10.1038/d41586-021-01627-2}
}

@InProceedings{lean,
author="de Moura, Leonardo
and Kong, Soonho
and Avigad, Jeremy
and van Doorn, Floris
and von Raumer, Jakob",
editor="Felty, Amy P.
and Middeldorp, Aart",
title="The Lean Theorem Prover (System Description)",
booktitle="Automated Deduction - CADE-25",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="378--388",
isbn="978-3-319-21401-6"
}

@incollection{Barrett2018,
  author    = {Clark W. Barrett and
               Cesare Tinelli},
  title     = {Satisfiability Modulo Theories},
  booktitle = {Handbook of Model Checking.},
  pages     = {305--343},
  year      = {2018},
  url       = {https://doi.org/10.1007/978-3-319-10575-8\_11},
  doi       = {10.1007/978-3-319-10575-8\_11},
  timestamp = {Mon, 24 Jun 2019 15:54:17 +0200},
  biburl    = {https://dblp.org/rec/bib/reference/mc/BarrettT18},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  editor    = {Edmund M. Clarke and
               Thomas A. Henzinger and
               Helmut Veith and
               Roderick Bloem},
  publisher = {Springer},
}

@book{Bertot2004,
  author    = {Yves Bertot and
               Pierre Cast{\'{e}}ran},
  title     = {Interactive Theorem Proving and Program Development - Coq'Art: The
               Calculus of Inductive Constructions},
  series    = {Texts in Theoretical Computer Science. An {EATCS} Series},
  publisher = {Springer},
  year      = {2004},
  doi       = {10.1007/978-3-662-07964-5},
  isbn      = {978-3-642-05880-6},
  timestamp = {Tue, 16 May 2017 14:24:38 +0200},
  biburl    = {https://dblp.org/rec/series/txtcs/BertotC04.bib},
}

@inproceedings{Bouton2009,
  author    = {Thomas Bouton and
               Diego Caminha B. de Oliveira and
               David D{\'{e}}harbe and
               Pascal Fontaine},
  title     = {{veriT}: {A}n {O}pen, {T}rustable and {E}fficient {SMT-S}olver},
  booktitle = cade,
  pages     = {151--156},
  year      = {2009},
  url       = {http://dx.doi.org/10.1007/978-3-642-02959-2_12},
  doi       = {10.1007/978-3-642-02959-2_12},
  editor    = {Renate A. Schmidt},
  series    = lncs,
  volume    = {5663},
  publisher = {Springer},
}

@inproceedings{Barrett2011,
author="Barrett, Clark
and Conway, Christopher L.
and Deters, Morgan
and Hadarean, Liana
and Jovanovi{\'{c}}, Dejan
and King, Tim
and Reynolds, Andrew
and Tinelli, Cesare",
editor="Gopalakrishnan, Ganesh
and Qadeer, Shaz",
title={{CVC4}},
booktitle=cav,
year="2011",
publisher="Springer",
pages="171--177",
doi="10.1007/978-3-642-22110-1_14",
url="http://dx.doi.org/10.1007/978-3-642-22110-1_14"
}

@book{Nipkow2002,
  author    = {Tobias Nipkow and
               Lawrence C. Paulson and
               Markus Wenzel},
  title     = {Isabelle/HOL: {A} Proof Assistant for Higher-Order Logic},
  series    = {LNCS},
  volume    = {2283},
  publisher = {Springer},
  year      = {2002}
}

@inproceedings{Barbosa2022,
  author    = {Haniel Barbosa and Andrew Reynolds and Gereon Kremer and Hanna
                                Lachnitt and Aina Niemetz and Andres Notzli and Alex
                                Ozdemir and Mathias Preiner and Arjun Viswanathan and Scott
                                Viteri and Yoni Zohar and Cesare Tinelli and Clark Barrett},
  editor    = {Jasmin Blanchette and Laura Kovacs and Dirk Pattinson},
  title     = {Flexible Proof Production in an Industrial-Strength SMT Solver},
  booktitle = ijcar,
  series    = lncs,
  publisher = {Springer},
  year      = {2022},
}


@inproceedings{mathlib,
author    = {The mathlib Community},
title     = {The Lean Mathematical Library},
year      = {2020},
isbn      = {9781450370974},
publisher = {Association for Computing Machinery},
address   = {New York, NY, USA},
doi       = {10.1145/3372885.3373824},
booktitle = {Proceedings of the 9th ACM SIGPLAN International Conference on Certified Programs and Proofs},
pages     = {367-381},
numpages  = {15},
keywords  = {formal proof, formal library, mathlib, Lean},
location  = {New Orleans, LA, USA},
series    = {CPP 2020}
}

@article{snipe,
  doi = {10.4204/eptcs.336.3},

  url = {https://doi.org/10.4204%2Feptcs.336.3},

  year = 2021,
  month = {jul},

  publisher = {Open Publishing Association},

  volume = {336},

  pages = {24--39},

  author = {Valentin Blot and Louise Dubois de Prisque and Chantal Keller and Pierre Vial},

  title = {General Automation in Coq through Modular Transformations},

  journal = {Electronic Proceedings in Theoretical Computer Science}
}

@InProceedings{proof_production,
author="Barbosa, Haniel
and Reynolds, Andrew
and Kremer, Gereon
and Lachnitt, Hanna
and Niemetz, Aina
and N{\"o}tzli, Andres
and Ozdemir, Alex
and Preiner, Mathias
and Viswanathan, Arjun
and Viteri, Scott
and Zohar, Yoni
and Tinelli, Cesare
and Barrett, Clark",
editor="Blanchette, Jasmin
and Kov{\'a}cs, Laura
and Pattinson, Dirk",
title="Flexible Proof Production in an Industrial-Strength SMT Solver",
booktitle="Automated Reasoning",
year="2022",
publisher="Springer International Publishing",
address="Cham",
pages="15--35",
abstract="Proof production for SMT solvers is paramount to ensure their correctness independently from implementations, which are often prohibitively difficult to verify. Historically, however, SMT proof production has struggled with performance and coverage issues, resulting in the disabling of many crucial solving techniques and in coarse-grained (and thus hard to check) proofs. We present a flexible proof-production architecture designed to handle the complexity of versatile, industrial-strength SMT solvers and show how we leverage it to produce detailed proofs, including for components previously unsupported by any solver. The architecture allows proofs to be produced modularly, lazily, and with numerous safeguards for correctness. This architecture has been implemented in the state-of-the-art SMT solver cvc5. We evaluate its proofs for SMT-LIB benchmarks and show that the new architecture produces better coverage than previous approaches, has acceptable performance overhead, and supports detailed proofs for most solving components.",
isbn="978-3-031-10769-6"
}

@book{smt,
  title={Satisfiability modulo theories},
  author={Barrett, Clark and Tinelli, Cesare},
  year={2018},
  publisher={Springer}
}

@book{many_sorted,
author = {Manzano, Mar\'{\i}a},
title = {Extensions of First Order Logic},
year = {1996},
isbn = {0521354358},
publisher = {Cambridge University Press},
address = {USA}
}

@inproceedings{f_star,
author = {Swamy, Nikhil and Kohlweiss, Markulf and Zinzindohoue, Jean-Karim and Zanella-Béguelin, Santiago and Hriţcu, Cătălin and Keller, Chantal and Rastogi, Aseem and Delignat-Lavaud, Antoine and Forest, Simon and Bhargavan, Karthikeyan and Fournet, Cedric and Strub, Pierre-Yves},
year = {2016},
month = {04},
pages = {256-270},
title = {Dependent types and multi-monadic effects in F*},
volume = {51},
doi = {10.1145/2837614.2837655}
}

@book{hacker_delight,
author = {Warren, Henry S.},
title = {Hacker's Delight},
year = {2012},
isbn = {0321842685},
publisher = {Addison-Wesley Professional},
edition = {2nd},
abstract = {In Hackers Delight, Second Edition, Hank Warren once again compiles an irresistible collection of programming hacks: timesaving techniques, algorithms, and tricks that help programmers build more elegant and efficient software, while also gaining deeper insights into their craft. Warrens hacks are eminently practical, but theyre also intrinsically interesting, and sometimes unexpected, much like the solution to a great puzzle. They are, in a word, a delight to any programmer who is excited by the opportunity to improve. Extensive additions in this edition include A new chapter on cyclic redundancy checking (CRC), including routines for the commonly used CRC-32 code A new chapter on error correcting codes (ECC), including routines for the Hamming code More coverage of integer division by constants, including methods using only shifts and adds Computing remainders without computing a quotient More coverage of population count and counting leading zeros Array population count New algorithms for compress and expand An LRU algorithm Floating-point to/from integer conversions Approximate floating-point reciprocal square root routine A gallery of graphs of discrete functions Now with exercises and answers}
}

@article{fol_undec,
title   = {Explaining the Undecidability of First-Order Logic},
year    = {2021},
url     = {https://www2.cms.hu-berlin.de/newlogic/webMathematica/Logic/undecidability_phil_publication.pdf},
DOI     = {10.3390/1010000},
author  = {Timm Lampert , Anderson Nakano},
}
